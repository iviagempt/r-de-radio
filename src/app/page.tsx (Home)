'use client';
import { useEffect, useMemo, useState } from 'react';
import { supabase } from '@/lib/supabaseClient';
import RadioPlayer from '@/components/RadioPlayer';
import type { Station, StationStream } from '@/types';

export default function HomePage() {
  const [stations, setStations] = useState<Station[]>([]);
  const [selected, setSelected] = useState<Station | null>(null);
  const [streams, setStreams] = useState<StationStream[]>([]);
  const [q, setQ] = useState('');

  useEffect(() => {
    (async () => {
      const { data } = await supabase.from('stations').select('*').eq('is_active', true).order('name', { ascending: true }).limit(200);
      setStations(data || []);
    })();
  }, []);

  useEffect(() => {
    (async () => {
      if (!selected) return;
      const { data } = await supabase.from('station_streams').select('*').eq('station_id', selected.id).eq('is_active', true).order('priority', { ascending: true });
      setStreams(data || []);
    })();
  }, [selected]);

  const filtered = useMemo(() => {
    const s = q.trim().toLowerCase();
    if (!s) return stations;
    return stations.filter(st =>
      st.name.toLowerCase().includes(s)
      || (st.country || '').toLowerCase().includes(s)
      || (st.language || '').toLowerCase().includes(s)
      || (st.genres || []).some(g => g.toLowerCase().includes(s))
    );
  }, [q, stations]);

  return (
    <div style={{ display: 'grid', gap: 12, gridTemplateColumns: '1fr 2fr' }}>
      <div className="card">
        <input value={q} onChange={e => setQ(e.target.value)} placeholder="Buscar por nome, país, gênero..." style={{ width: '100%', marginBottom: 8 }} />
        <ul style={{ maxHeight: 520, overflow: 'auto', margin: 0, padding: 0, listStyle: 'none' }}>
          {filtered.map(s => (
            <li key={s.id} onClick={() => setSelected(s)} style={{ display: 'flex', gap: 8, alignItems: 'center', padding: 8, borderRadius: 8, cursor: 'pointer', background: selected?.id === s.id ? '#f0f6ff' : 'transparent' }}>
              {s.logo_url ? <img src={s.logo_url} alt="" width={32} height={32} /> : <div style={{ width:32, height:32, background:'#eee', borderRadius:6 }} />}
              <div>
                <div style={{ fontWeight: 600 }}>{s.name}</div>
                <div style={{ fontSize: 12, opacity: 0.7 }}>{[s.country, s.language].filter(Boolean).join(' • ')}</div>
              </div>
            </li>
          ))}
        </ul>
      </div>
      <div>
        {selected ? (
          <div>
            <h2 style={{ margin: '8px 0' }}>{selected.name}</h2>
            {streams.length ? (
              <RadioPlayer primaryUrl={streams[0].url} fallbacks={streams.slice(1).map(s => s.url)} />
            ) : (
              <div className="card">Nenhum stream configurado.</div>
            )}
            <div className="card" style={{ marginTop: 12 }}>
              <strong>Publicidade</strong>
              <div style={{ height: 90, border: '1px dashed #bbb', marginTop: 8, borderRadius: 8, display: 'flex', alignItems: 'center', justifyContent: 'center' }}>
                Slot de Ad (colaremos AdSense depois)
              </div>
            </div>
          </div>
        ) : (
          <div className="card">Selecione uma estação à esquerda.</div>
        )}
      </div>
    </div>
  );
}
